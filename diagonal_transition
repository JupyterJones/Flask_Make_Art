#!/home/jack/miniconda3/envs/cloned_base/bin/python
import os
import subprocess
import random
from sys import argv
import uuid
import shutil
def manage_directory(temp_directory):
    # Check if the directory exists
    if os.path.exists(temp_directory) and os.path.isdir(temp_directory):
        # Remove the contents of the existing directory
        for root, dirs, files in os.walk(temp_directory):
            for file in files:
                file_path = os.path.join(root, file)
                os.remove(file_path)
            for dir in dirs:
                dir_path = os.path.join(root, dir)
                shutil.rmtree(dir_path)

        print(f"Contents of '{temp_directory}' removed.")
    else:
        # Create the directory if it doesn't exist
        os.makedirs(temp_directory)
        print(f"Directory '{temp_directory}' created.")
        temp_directory("TEMP")
        manage_directory(temp_directory)
def diag_trans(DIR,output_file):
    image_dir=DIR
    # Get a list of image file names in the directory jpg or png
    image_files = [f for f in os.listdir(image_dir) if f.endswith('.jpg') or f.endswith('.png')]
    print(image_files)
    # Sort the image files to maintain order
    image_files.sort()
    VIDEOS=[]
    random.shuffle(image_files)
    # Build the full FFmpeg command
    for i in range(len(image_files)-1):
        input_file = os.path.join(image_dir, image_files[i])
        input_file2 = os.path.join(image_dir, image_files[i+1])
        output_video = f"TEMP/{i}.mp4"
        
        ffmpeg_cmd = [
            "FFmpeg",
            "-loop", "1",
            "-t", "1.5",
            "-i", input_file,
            "-loop", "1",
            "-t", "1.75",
            "-i", input_file2,  # You may want to adjust this if needed
            #"-filter_complex", f"[0][1]xfade=transition=diagtr:duration=1:offset=2.5,format=yuv420p",
            "-filter_complex", f"[0][1]xfade=transition=diagtr:duration=0.75:offset=0.75,format=yuv420p",
            "-y", output_video
        ]

        subprocess.run(ffmpeg_cmd)
        VIDEOS.append(output_video)

    # Create a mylist.txt file
    with open("mylist.txt", "w") as file:
        for video in VIDEOS:
            file.write(f"file '{video}'\n")

    # Concatenate videos using mylist.txt
    concat_cmd = [
        "FFmpeg",
        "-f", "concat",
        "-safe", "0",
        "-i", "mylist.txt",
        "-c", "copy",
        "-y",
        output_file
    ]

    subprocess.run(concat_cmd)
    uid = str(uuid.uuid4())  # Generate a unique ID using uuid
    mp4_file =  f"/home/jack/Desktop/HDD500/collections/vids/{uid}.mp4"
    shutil.copyfile(output_file, mp4_file) 
    print(f"Video created: {output_file}")
    print(f"Video copied: {mp4_file}")
    
if __name__=="__main__":    
    DIR='static/archived-store'

    output_file = "static/temp_exp/output5.mp4"
    diag_trans(DIR,output_file)

    # ffmpeg -i "static/temp_exp/output5.mp4" "static/temp_exp/diagonal1.mp4"
    subprocess.run(["ffmpeg", "-i", "static/temp_exp/output5.mp4", "-y","static/temp_exp/diagonal1.mp4"])
